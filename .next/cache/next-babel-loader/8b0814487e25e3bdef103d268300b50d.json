{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { server } from '../utils';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    layout: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      maxWidth: '768px',\n      margin: '0 auto'\n    },\n    paper: _defineProperty({\n      padding: theme.spacing(2)\n    }, theme.breakpoints.up(600 + theme.spacing(3) * 2), {\n      marginTop: theme.spacing(8),\n      padding: \"\".concat(theme.spacing(6), \"px \").concat(theme.spacing(4), \"px\")\n    }),\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n});\n\nvar Register = function Register() {\n  var classes = useStyles({});\n\n  var _React$useState = React.useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setFormData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      submitting = _React$useState4[0],\n      setSubmitting = _React$useState4[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var firstName, lastName, email, password, _yield$server$postAsy, success, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              firstName = formData.firstName, lastName = formData.lastName, email = formData.email, password = formData.password;\n              _context.next = 4;\n              return server.postAsync('/auth/register', {\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                password: password\n              });\n\n            case 4:\n              _yield$server$postAsy = _context.sent;\n              success = _yield$server$postAsy.success;\n              data = _yield$server$postAsy.data;\n\n              if (!success) {\n                _context.next = 10;\n                break;\n              }\n\n              window.location.replace(data);\n              return _context.abrupt(\"return\");\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"main\", {\n    className: classes.layout\n  }, __jsx(Paper, {\n    className: classes.paper,\n    elevation: 2\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    gutterBottom: true\n  }, \"Register\")), __jsx(\"form\", {\n    method: \"post\",\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"firstName\",\n    label: \"First Name\",\n    name: \"firstName\",\n    autoComplete: \"fname\",\n    autoFocus: true,\n    defaultValue: formData.firstName,\n    onChange: function onChange(e) {\n      return setFormData(_objectSpread({}, formData, {\n        firstName: e.target.value\n      }));\n    }\n  }), __jsx(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"lastName\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    autoComplete: \"lname\",\n    defaultValue: formData.lastName,\n    onChange: function onChange(e) {\n      return setFormData(_objectSpread({}, formData, {\n        lastName: e.target.value\n      }));\n    }\n  }), __jsx(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    defaultValue: formData.email,\n    onChange: function onChange(e) {\n      return setFormData(_objectSpread({}, formData, {\n        email: e.target.value\n      }));\n    }\n  }), __jsx(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"new-password\",\n    defaultValue: formData.password,\n    onChange: function onChange(e) {\n      return setFormData(_objectSpread({}, formData, {\n        password: e.target.value\n      }));\n    }\n  }), __jsx(Box, {\n    mb: 6\n  }, __jsx(Button, {\n    disabled: submitting,\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit\n  }, submitting && __jsx(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress\n  }), submitting ? 'Registering...' : 'Register')))));\n};\n\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}